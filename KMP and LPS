// KMPALGO 

// Function to calculate longest prefix which is equal to suffix in a particular string-----------


     vector<int>LPS(string s){
        vector<int>lps(s.length(),0);
        int i = 1,n = s.length();
        int len = 0;
        while(i < n){
            if(s[i] == s[len]){
                len++;
                lps[i] = len;
                i++;
            }else{
                if(len > 0){
                    len = lps[len-1];
                }else{
                    lps[i] = 0;
                    i++;
                }
            }
        }

        return lps;
    }



-----------------------------------------------------------------------------------------------------


   // Function to find pattern(pat) if it is present in the text(text) or not if yes then print starting index otherwise -1 ---------------------


    int findMatching(string text, string pat) {
        vector<int>lps = LPS(pat);
        int i = 0,j = 0;
        while(i < text.length() ){
            if(j == pat.length())break;
            if(text[i] != pat[j]){
                if(j > 0)j = lps[j-1];
                else i++;
            }else{
                i++,j++;
            }
        }
        
        if(j == pat.length())return (i-j);
        
        return -1;
    }


-----------------------------------------------------------------------------------------------------------------------------------------------------
